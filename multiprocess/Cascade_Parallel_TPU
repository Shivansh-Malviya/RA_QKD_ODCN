{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.15","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30788,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport time\nimport multiprocessing as mp\nimport tensorflow as tf  # For GPU/TPU acceleration\nfrom multiprocessing import cpu_count\n# mp.set_start_method('spawn', force=True)\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-08T20:47:59.541445Z","iopub.execute_input":"2024-10-08T20:47:59.542359Z","iopub.status.idle":"2024-10-08T20:48:14.075800Z","shell.execute_reply.started":"2024-10-08T20:47:59.542323Z","shell.execute_reply":"2024-10-08T20:48:14.074823Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"WARNING: Logging before InitGoogle() is written to STDERR\nE0000 00:00:1728420485.792008      13 common_lib.cc:798] Could not set metric server port: INVALID_ARGUMENT: Could not find SliceBuilder port 8471 in any of the 0 ports provided in `tpu_process_addresses`=\"local\"\n=== Source Location Trace: ===\nlearning/45eac/tfrc/runtime/common_lib.cc:479\nD1008 20:48:05.800075026      13 config.cc:196]                        gRPC EXPERIMENT call_status_override_on_cancellation   OFF (default:OFF)\nD1008 20:48:05.800090508      13 config.cc:196]                        gRPC EXPERIMENT call_v3                                OFF (default:OFF)\nD1008 20:48:05.800094379      13 config.cc:196]                        gRPC EXPERIMENT canary_client_privacy                  ON  (default:ON)\nD1008 20:48:05.800097222      13 config.cc:196]                        gRPC EXPERIMENT capture_base_context                   ON  (default:ON)\nD1008 20:48:05.800100045      13 config.cc:196]                        gRPC EXPERIMENT client_idleness                        ON  (default:ON)\nD1008 20:48:05.800102835      13 config.cc:196]                        gRPC EXPERIMENT client_privacy                         ON  (default:ON)\nD1008 20:48:05.800105548      13 config.cc:196]                        gRPC EXPERIMENT dapper_request_wire_size               OFF (default:OFF)\nD1008 20:48:05.800108169      13 config.cc:196]                        gRPC EXPERIMENT empty_experiment                       OFF (default:OFF)\nD1008 20:48:05.800110726      13 config.cc:196]                        gRPC EXPERIMENT event_engine_client                    OFF (default:OFF)\nD1008 20:48:05.800113271      13 config.cc:196]                        gRPC EXPERIMENT event_engine_dns                       ON  (default:ON)\nD1008 20:48:05.800116068      13 config.cc:196]                        gRPC EXPERIMENT event_engine_listener                  ON  (default:ON)\nD1008 20:48:05.800118651      13 config.cc:196]                        gRPC EXPERIMENT free_large_allocator                   OFF (default:OFF)\nD1008 20:48:05.800121223      13 config.cc:196]                        gRPC EXPERIMENT google_no_envelope_resolver            OFF (default:OFF)\nD1008 20:48:05.800123773      13 config.cc:196]                        gRPC EXPERIMENT http2_stats_fix                        OFF (default:OFF)\nD1008 20:48:05.800126318      13 config.cc:196]                        gRPC EXPERIMENT keepalive_fix                          OFF (default:OFF)\nD1008 20:48:05.800128922      13 config.cc:196]                        gRPC EXPERIMENT keepalive_server_fix                   ON  (default:ON)\nD1008 20:48:05.800131802      13 config.cc:196]                        gRPC EXPERIMENT loas_do_not_prefer_rekey_next_protocol OFF (default:OFF)\nD1008 20:48:05.800134412      13 config.cc:196]                        gRPC EXPERIMENT loas_prod_to_cloud_prefer_pfs_ciphers  OFF (default:OFF)\nD1008 20:48:05.800137027      13 config.cc:196]                        gRPC EXPERIMENT monitoring_experiment                  ON  (default:ON)\nD1008 20:48:05.800139674      13 config.cc:196]                        gRPC EXPERIMENT multiping                              OFF (default:OFF)\nD1008 20:48:05.800142246      13 config.cc:196]                        gRPC EXPERIMENT peer_state_based_framing               OFF (default:OFF)\nD1008 20:48:05.800144845      13 config.cc:196]                        gRPC EXPERIMENT pending_queue_cap                      ON  (default:ON)\nD1008 20:48:05.800147548      13 config.cc:196]                        gRPC EXPERIMENT pick_first_happy_eyeballs              ON  (default:ON)\nD1008 20:48:05.800150177      13 config.cc:196]                        gRPC EXPERIMENT promise_based_client_call              OFF (default:OFF)\nD1008 20:48:05.800152652      13 config.cc:196]                        gRPC EXPERIMENT promise_based_inproc_transport         OFF (default:OFF)\nD1008 20:48:05.800155200      13 config.cc:196]                        gRPC EXPERIMENT promise_based_server_call              OFF (default:OFF)\nD1008 20:48:05.800157838      13 config.cc:196]                        gRPC EXPERIMENT registered_method_lookup_in_transport  ON  (default:ON)\nD1008 20:48:05.800160432      13 config.cc:196]                        gRPC EXPERIMENT rfc_max_concurrent_streams             ON  (default:ON)\nD1008 20:48:05.800163182      13 config.cc:196]                        gRPC EXPERIMENT round_robin_delegate_to_pick_first     ON  (default:ON)\nD1008 20:48:05.800166832      13 config.cc:196]                        gRPC EXPERIMENT rstpit                                 OFF (default:OFF)\nD1008 20:48:05.800169563      13 config.cc:196]                        gRPC EXPERIMENT schedule_cancellation_over_write       OFF (default:OFF)\nD1008 20:48:05.800172351      13 config.cc:196]                        gRPC EXPERIMENT server_privacy                         ON  (default:ON)\nD1008 20:48:05.800175040      13 config.cc:196]                        gRPC EXPERIMENT tcp_frame_size_tuning                  OFF (default:OFF)\nD1008 20:48:05.800177657      13 config.cc:196]                        gRPC EXPERIMENT tcp_rcv_lowat                          OFF (default:OFF)\nD1008 20:48:05.800180232      13 config.cc:196]                        gRPC EXPERIMENT trace_record_callops                   OFF (default:OFF)\nD1008 20:48:05.800182875      13 config.cc:196]                        gRPC EXPERIMENT unconstrained_max_quota_buffer_size    OFF (default:OFF)\nD1008 20:48:05.800185399      13 config.cc:196]                        gRPC EXPERIMENT v3_backend_metric_filter               OFF (default:OFF)\nD1008 20:48:05.800187973      13 config.cc:196]                        gRPC EXPERIMENT v3_channel_idle_filters                ON  (default:ON)\nD1008 20:48:05.800190635      13 config.cc:196]                        gRPC EXPERIMENT v3_compression_filter                  ON  (default:ON)\nD1008 20:48:05.800193268      13 config.cc:196]                        gRPC EXPERIMENT v3_server_auth_filter                  OFF (default:OFF)\nD1008 20:48:05.800195834      13 config.cc:196]                        gRPC EXPERIMENT work_serializer_clears_time_cache      OFF (default:OFF)\nD1008 20:48:05.800198378      13 config.cc:196]                        gRPC EXPERIMENT work_serializer_dispatch               OFF (default:OFF)\nD1008 20:48:05.800200966      13 config.cc:196]                        gRPC EXPERIMENT write_size_cap                         ON  (default:ON)\nD1008 20:48:05.800203634      13 config.cc:196]                        gRPC EXPERIMENT write_size_policy                      ON  (default:ON)\nD1008 20:48:05.800206287      13 config.cc:196]                        gRPC EXPERIMENT wrr_delegate_to_pick_first             ON  (default:ON)\nI1008 20:48:05.800422124      13 ev_epoll1_linux.cc:123]               grpc epoll fd: 59\nD1008 20:48:05.800436659      13 ev_posix.cc:113]                      Using polling engine: epoll1\nD1008 20:48:05.811124614      13 lb_policy_registry.cc:46]             registering LB policy factory for \"priority_experimental\"\nD1008 20:48:05.811135897      13 lb_policy_registry.cc:46]             registering LB policy factory for \"outlier_detection_experimental\"\nD1008 20:48:05.811144834      13 lb_policy_registry.cc:46]             registering LB policy factory for \"weighted_target_experimental\"\nD1008 20:48:05.811148317      13 lb_policy_registry.cc:46]             registering LB policy factory for \"pick_first\"\nD1008 20:48:05.811151796      13 lb_policy_registry.cc:46]             registering LB policy factory for \"round_robin\"\nD1008 20:48:05.811155048      13 lb_policy_registry.cc:46]             registering LB policy factory for \"weighted_round_robin\"\nD1008 20:48:05.811184876      13 lb_policy_registry.cc:46]             registering LB policy factory for \"grpclb\"\nD1008 20:48:05.811197633      13 dns_resolver_plugin.cc:43]            Using EventEngine dns resolver\nD1008 20:48:05.811215340      13 lb_policy_registry.cc:46]             registering LB policy factory for \"rls_experimental\"\nD1008 20:48:05.811240802      13 lb_policy_registry.cc:46]             registering LB policy factory for \"xds_cluster_manager_experimental\"\nD1008 20:48:05.811249183      13 lb_policy_registry.cc:46]             registering LB policy factory for \"xds_cluster_impl_experimental\"\nD1008 20:48:05.811252837      13 lb_policy_registry.cc:46]             registering LB policy factory for \"cds_experimental\"\nD1008 20:48:05.811257051      13 lb_policy_registry.cc:46]             registering LB policy factory for \"xds_override_host_experimental\"\nD1008 20:48:05.811260514      13 lb_policy_registry.cc:46]             registering LB policy factory for \"xds_wrr_locality_experimental\"\nD1008 20:48:05.811263881      13 lb_policy_registry.cc:46]             registering LB policy factory for \"ring_hash_experimental\"\nD1008 20:48:05.811267385      13 certificate_provider_registry.cc:33]  registering certificate provider factory for \"file_watcher\"\nD1008 20:48:05.811314374      13 channel_init.cc:157]                  Filter server-auth not registered, but is referenced in the after clause of grpc-server-authz when building channel stack SERVER_CHANNEL\nI1008 20:48:05.812844793      13 ev_epoll1_linux.cc:359]               grpc epoll fd: 61\nI1008 20:48:05.813934835      13 tcp_socket_utils.cc:689]              Disabling AF_INET6 sockets because ::1 is not available.\nI1008 20:48:05.826229310     102 socket_utils_common_posix.cc:452]     Disabling AF_INET6 sockets because ::1 is not available.\nI1008 20:48:05.826282470     102 socket_utils_common_posix.cc:379]     TCP_USER_TIMEOUT is available. TCP_USER_TIMEOUT will be used thereafter\nE1008 20:48:05.832510221     100 oauth2_credentials.cc:238]            oauth_fetch: UNKNOWN:C-ares status is not ARES_SUCCESS qtype=A name=metadata.google.internal. is_balancer=0: Domain name not found {grpc_status:2, created_time:\"2024-10-08T20:48:05.832495661+00:00\"}\n","output_type":"stream"}]},{"cell_type":"code","source":"# Set this to True if you want to use hardware acceleration (GPU/TPU)\naccelerate = True\n\n# Function to select the appropriate hardware accelerator (GPU, TPU, or CPU)\ndef select_device():\n    if accelerate:\n        try:\n            # Check for TPU availability\n            tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n            print('Running on TPU:', tpu.cluster_spec().as_dict())\n            tf.config.experimental_connect_to_cluster(tpu)\n            tf.tpu.experimental.initialize_tpu_system(tpu)\n            strategy = tf.distribute.TPUStrategy(tpu)\n            return strategy\n        except ValueError:\n            # If TPU is not available, check for GPU\n            gpus = tf.config.list_physical_devices('GPU')\n            if gpus:\n                print(\"Running on GPU\")\n                # Use GPU\n                return None  # TensorFlow will automatically use available GPU\n            else:\n                print(\"Running on CPU\")\n                return None  # TensorFlow defaults to CPU\n    else:\n        print(\"Accelerate is False, running on CPU.\")\n        return None\n\n# Select device (GPU/TPU/CPU)\nstrategy = select_device()\n\n# Progress tracking (simple tracker)\ndef track(batch_idx, num_batches):\n    progress = (batch_idx + 1) / num_batches * 100\n    print(f\"\\rProgress: {progress:.2f}%\", end = '')\n\n# Simulate SNR range (This function can be accelerated if 'accelerate' is True)\ndef simulate_snr_range(snr_range, num_keys, key_length, signal_power):\n    results = {\n        'avg_qber': np.zeros(len(snr_range)),\n        'avg_ber': np.zeros(len(snr_range)),\n        'avg_corrected_qber': np.zeros(len(snr_range)),\n        'avg_corrected_ber': np.zeros(len(snr_range)),\n        'keys_kept': np.zeros(len(snr_range)),\n        'keys_discarded': np.zeros(len(snr_range)),\n        'total_kept_bits': np.zeros(len(snr_range)),\n    }\n\n    if accelerate:\n        # Accelerate using GPU/TPU based on the selected device\n        with strategy.scope() if strategy else tf.device('/GPU:0'):  # Strategy for TPU, GPU as fallback\n            snr_tensor = tf.constant(snr_range, dtype=tf.float32)\n            for snr_idx, snr_db in enumerate(snr_range):\n                # TensorFlow-accelerated random simulation (example)\n                keys_kept = tf.reduce_sum(tf.random.uniform([num_keys], minval=0, maxval=2, dtype=tf.int32))\n                qber = tf.reduce_mean(tf.random.uniform([num_keys], minval=0.0, maxval=1.0, dtype=tf.float32))\n                results['avg_qber'][snr_idx] = qber.numpy()\n                results['keys_kept'][snr_idx] = keys_kept.numpy()\n    else:\n        # Standard CPU-based simulation\n        for snr_idx, snr_db in enumerate(snr_range):\n            # Simulate the results for each SNR value\n            results['avg_qber'][snr_idx] = np.mean(np.random.rand(num_keys))  # QBER simulation example\n            results['keys_kept'][snr_idx] = np.random.randint(0, num_keys)\n    \n    return results\n\n# Monte Carlo Simulation with multiprocessing and optional hardware acceleration\ndef monte_carlo(num_keys, key_length, sample_size, snr_range, signal_power, batch_size=None):\n    cores = cpu_count()  # Get the number of CPU cores\n    if batch_size is None:\n        batch_size = cores // 2  # Default to half the cores for batch size\n\n    start_time = time.time()\n\n    # Initialize the dictionary to store the running averages\n    avg_results = {\n        'avg_qber': np.zeros(len(snr_range)),\n        'avg_ber': np.zeros(len(snr_range)),\n        'avg_corrected_qber': np.zeros(len(snr_range)),\n        'avg_corrected_ber': np.zeros(len(snr_range)),\n        'keys_kept': np.zeros(len(snr_range)),\n        'keys_discarded': np.zeros(len(snr_range)),\n        'total_kept_bits': np.zeros(len(snr_range)),\n    }\n\n    # Total number of batches\n    num_batches = int(np.ceil(sample_size / batch_size))\n\n    # Counter to keep track of the total number of processed samples\n    total_samples = 0\n\n    # Multiprocessing Pool\n    with mp.Pool(processes=cores // 2) as pool:\n        # Process each batch\n        for batch_idx in range(num_batches):\n            # Determine the number of samples for this batch (handle last batch with fewer samples)\n            current_batch_size = min(batch_size, sample_size - total_samples)\n\n            # Run simulations for the current batch in parallel using multiprocessing\n            parallel_results = pool.starmap(simulate_snr_range, [(snr_range, num_keys, key_length, signal_power) for _ in range(current_batch_size)])\n\n            # Update running averages after each batch\n            for result in parallel_results:\n                for key in avg_results.keys():\n                    # Incrementally update running average\n                    avg_results[key] = (avg_results[key] * total_samples + np.array(result[key]) * current_batch_size) / (total_samples + current_batch_size)\n\n            # Update total number of samples processed so far\n            total_samples += current_batch_size\n\n            # Track progress\n            track(batch_idx, num_batches)\n\n    end_time = time.time()\n    print(f\"Monte Carlo simulation completed in {end_time - start_time:.2f} seconds.\")\n\n    return avg_results","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-08T20:48:14.077428Z","iopub.execute_input":"2024-10-08T20:48:14.077846Z","iopub.status.idle":"2024-10-08T20:48:22.777756Z","shell.execute_reply.started":"2024-10-08T20:48:14.077819Z","shell.execute_reply":"2024-10-08T20:48:22.776764Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Running on TPU: {}\nINFO:tensorflow:Deallocate tpu buffers before initializing tpu system.\nINFO:tensorflow:Initializing the TPU system: local\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1728420498.334747      13 service.cc:145] XLA service 0x56b7efe114c0 initialized for platform TPU (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1728420498.334796      13 service.cc:153]   StreamExecutor device (0): TPU, 2a886c8\nI0000 00:00:1728420498.334800      13 service.cc:153]   StreamExecutor device (1): TPU, 2a886c8\nI0000 00:00:1728420498.334803      13 service.cc:153]   StreamExecutor device (2): TPU, 2a886c8\nI0000 00:00:1728420498.334807      13 service.cc:153]   StreamExecutor device (3): TPU, 2a886c8\nI0000 00:00:1728420498.334809      13 service.cc:153]   StreamExecutor device (4): TPU, 2a886c8\nI0000 00:00:1728420498.334812      13 service.cc:153]   StreamExecutor device (5): TPU, 2a886c8\nI0000 00:00:1728420498.334814      13 service.cc:153]   StreamExecutor device (6): TPU, 2a886c8\nI0000 00:00:1728420498.334817      13 service.cc:153]   StreamExecutor device (7): TPU, 2a886c8\n","output_type":"stream"},{"name":"stdout","text":"INFO:tensorflow:Finished initializing TPU system.\nINFO:tensorflow:Found TPU system:\nINFO:tensorflow:*** Num TPU Cores: 8\nINFO:tensorflow:*** Num TPU Workers: 1\nINFO:tensorflow:*** Num TPU Cores Per Worker: 8\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:CPU:0, CPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:0, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:1, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:2, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:3, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:4, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:5, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:6, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU:7, TPU, 0, 0)\nINFO:tensorflow:*** Available Device: _DeviceAttributes(/job:localhost/replica:0/task:0/device:TPU_SYSTEM:0, TPU_SYSTEM, 0, 0)\n","output_type":"stream"}]},{"cell_type":"code","source":"%%time\n# Example Simulation Parameters\nsample_size = int(1e5)  # 100,000 samples\nkey_length = 32\nnum_keys = int(1e3)  # 1000 keys\nSNR_RANGE = np.arange(0, 12.5, 0.5)\nsignal_power = 0.15\n\n# Run the Monte Carlo Simulation with multiprocessing and optional acceleration\nresults = monte_carlo(num_keys, key_length, sample_size, SNR_RANGE, signal_power)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-08T20:48:22.778858Z","iopub.execute_input":"2024-10-08T20:48:22.779116Z","iopub.status.idle":"2024-10-08T20:49:52.613741Z","shell.execute_reply.started":"2024-10-08T20:48:22.779088Z","shell.execute_reply":"2024-10-08T20:49:52.612370Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Progress: 100.00%Monte Carlo simulation completed in 89.83 seconds.\nCPU times: user 25.2 s, sys: 11.5 s, total: 36.7 s\nWall time: 1min 29s\n","output_type":"stream"},{"name":"stderr","text":"https://symbolize.stripped_domain/r/?trace=https://symbolize.stripped_domain/r/?trace=7f3aff893f09,7f3aff4f804f&map= \n*** SIGTERM received by PID 1265 (TID 1265) on cpu 56 from PID 13; stack trace: ***\n7f3aff804271,7f3aff4f804f&map= \n*** SIGTERM received by PID 1261 (TID 1261) on cpu 71 from PID 13; stack trace: ***\nPC: @     0x7f3aff893f09  (unknown)  set_difference_update\n    @     0x7f3a18690387        928  (unknown)\n    @     0x7f3aff4f8050  (unknown)  (unknown)\nPC: @     0x7f3aff804271  (unknown)  find_name_in_mro\n    @     0x7f3a18690387        928  (unknown)\n    @     0x7f3aff4f8050  (unknown)  (unknown)\n    @     0x7f3aff9be180  (unknown)  (unknown)\nhttps://symbolize.stripped_domain/r/?trace=7f3aff893f09,7f3a18690386,7f3aff4f804f,7f3aff9be17f&map= \nE1008 20:49:52.472737    1265 coredump_hook.cc:388] RAW: Remote crash gathering disabled for SIGTERM.\n    @     0x7f3aff9bd8c0  (unknown)  (unknown)\nhttps://symbolize.stripped_domain/r/?trace=7f3aff804271,7f3a18690386,7f3aff4f804f,7f3aff9bd8bf&map= \nE1008 20:49:52.475425    1261 coredump_hook.cc:388] RAW: Remote crash gathering disabled for SIGTERM.\nE1008 20:49:52.503272    1265 process_state.cc:807] RAW: Raising signal 15 with default behavior\nE1008 20:49:52.524680    1261 process_state.cc:807] RAW: Raising signal 15 with default behavior\n","output_type":"stream"}]}]}